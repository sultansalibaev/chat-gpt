{"version":3,"file":"js/app.36fd70b7.js","mappings":"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","sources":["webpack://chat-gpt/./src/App.vue","webpack://chat-gpt/./src/components/ChatGPTModal.vue","webpack://chat-gpt/./src/components/TextReaction.vue","webpack://chat-gpt/./src/use/data/index.js","webpack://chat-gpt/./src/use/api.js","webpack://chat-gpt/./src/use/utils/langIs.js","webpack://chat-gpt/./src/components/TextReaction.vue?700c","webpack://chat-gpt/./src/components/ChatGPTModal.vue?fe89","webpack://chat-gpt/./src/App.vue?7ccd","webpack://chat-gpt/./src/main.js","webpack://chat-gpt/./src/use/utils/index.js","webpack://chat-gpt/webpack/bootstrap","webpack://chat-gpt/webpack/runtime/chunk loaded","webpack://chat-gpt/webpack/runtime/compat get default export","webpack://chat-gpt/webpack/runtime/define property getters","webpack://chat-gpt/webpack/runtime/global","webpack://chat-gpt/webpack/runtime/hasOwnProperty shorthand","webpack://chat-gpt/webpack/runtime/jsonp chunk loading","webpack://chat-gpt/webpack/startup"],"sourcesContent":["<template>\r\n    <ChatGPTModal />\r\n    <span @click=\"chatgpt_item = !chatgpt_item\" class=\"nav-label\" style=\"color: #a7b1c2;font-weight: 600;\">ChatGPT</span>\r\n</template>\r\n  \r\n<script>\r\nimport ChatGPTModal from './components/ChatGPTModal.vue'\r\nimport { chatgpt_item } from '@/use/data/index'\r\n\r\nexport default {\r\n    name: 'App',\r\n    components: {\r\n        ChatGPTModal\r\n    },\r\n    setup() {\r\n        return { chatgpt_item };\r\n    },\r\n}\r\n</script>\r\n  \r\n<style>\r\n\r\n#app {\r\n    color: rgb(51, 51, 51);\r\n    font-weight: 400;\r\n}\r\n\r\n</style>\r\n  ","<template>\r\n    <!-- ChatGPT -->\r\n    <div\r\n        class=\"delete-resource-modal\"\r\n        style=\"z-index: 999999999999999999999;\"\r\n        v-show=\"chatgpt_item\"\r\n        @click.stop=\"chatgpt_item = null\"\r\n    >\r\n        <div class=\"flex flex-col chat-gpt-modal relative bg-white\" @click.stop :class=\"{\r\n            'ml-[-110px]': chatgpt_tab != 'MadeRequests'\r\n        }\">\r\n            <div class=\"modal-content h-full\">\r\n\t\t\t\t<div class=\"modal-header bg-primary b-r-0\" style=\"height: 49px;\" :style=\"chatgpt_tab != 'MadeRequests' ? 'width: calc(100% + 220px);' : ''\">\r\n\t\t\t\t\t<div class=\"col-lg-12 p-0\">\r\n\t\t\t\t\t\t<h3 class=\"f-l m-0\">Анализ ChatGPT</h3>\r\n\t\t\t\t\t\t<button class=\"close btn absolute\" data-dismiss=\"modal\" @click.stop=\"chatgpt_item = null\" style=\"font-size: 20px !important; text-shadow: none; line-height: 20px; opacity: 1; color: #fff; right: 0px;top: 0px\">\r\n\t\t\t\t\t\t\t<i class=\"fa fa-close\"></i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"tab-content-container\">\r\n                    <div class=\"tab-head\" style=\"margin: 14px 17px 0;overflow: hidden;height: 0;\">\r\n                        <div class=\"w-1/2 flex\">\r\n                            <div class=\"tab-item inline-block\" @click=\"chatgpt_tab = 'MadeRequests'\" :class=\"{\r\n                                selected: chatgpt_tab == 'MadeRequests'\r\n                            }\">Проделанные запросы</div>\r\n                        </div>\r\n                        <div class=\"tab-item\" @click=\"chatgpt_tab = 'TextAnalyze'\" :class=\"{\r\n                            selected: chatgpt_tab == 'TextAnalyze'\r\n                        }\">Анализ новости</div>\r\n                        <div class=\"tab-item\" @click=\"chatgpt_tab = 'TextReaction'\" :class=\"{\r\n                            selected: chatgpt_tab == 'TextReaction'\r\n                        }\">Свой запрос</div>\r\n                    </div>\r\n                    <div class=\"tab-content\" style=\"margin: 0px 17px !important;height: 90%;\" :style=\"{\r\n                        padding: chatgpt_tab != 'TextReaction' ? '14px 17px' : '0'\r\n                    }\">\r\n                        <TextReaction />\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport TextReaction from \"@/components/TextReaction.vue\"\r\n\r\nimport { chatgpt_item, chatgpt_tab } from '@/use/data/index'\r\n\r\nexport default {\r\n    components: {\r\n        TextReaction,\r\n    },\r\n    setup() {\r\n        return { chatgpt_item, chatgpt_tab };\r\n    },\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.items {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 0 2.5px;\r\n}\r\n\r\n.item-container {\r\n    width: 50%;\r\n    padding: 0 7.5px;\r\n    margin-bottom: 15px;\r\n}\r\n.item {\r\n    height: 100%;\r\n    background: white;\r\n    padding: 10px 15px;\r\n    padding-top: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    box-shadow: 0 0 7px #7f7f7f59;\r\n    border-radius: 4px;\r\n}\r\n.m-b-10 {\r\n    margin-bottom: 10px;\r\n}\r\n.item-title__icon {\r\n    margin-right: 8px;\r\n    border-radius: 50%;\r\n    height: 40px;\r\n    width: 40px;\r\n    min-width: 40px;\r\n    cursor: pointer;\r\n}\r\n.item-title__text {\r\n    /* padding-top: 7px; */\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n}\r\n.item-title__menu {\r\n    cursor: pointer;\r\n    border: 1px solid #e7eaec;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    height: 30px;\r\n    min-width: 30px;\r\n    position: relative;\r\n    margin-top: 6px;\r\n    position: relative;\r\n}\r\n.item-title__menu:hover {\r\n    background: #e7eaecbe;\r\n}\r\n.item-title__menu:active {\r\n    background: #c9cccebe;\r\n}\r\n.item-title__menu .fa-ellipsis-vertical {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 17px;\r\n}\r\n.item-info {\r\n    font-size: 12px;\r\n}\r\n.item-resource {\r\n    color: #2d9cdb;\r\n\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    max-width: 25ch;\r\n    height: 13px;\r\n    margin-bottom: -1px;\r\n}\r\n.item-resource:hover {\r\n    color: #306ea4;\r\n    /* color: #23527c; */\r\n    text-decoration: underline;\r\n}\r\n.item-date {\r\n    color: #676a6c;\r\n    cursor: pointer;\r\n}\r\n.hover-underline:hover {\r\n    text-decoration: underline;\r\n}\r\n\r\n.item-content {\r\n    text-align: justify;\r\n\r\n    max-height: 80px;\r\n    line-height: 20px;\r\n    overflow: hidden;\r\n\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 4;\r\n    -webkit-box-orient: vertical;\r\n}\r\n.item-btns {\r\n    flex-grow: 1;\r\n    justify-content: space-between;\r\n    align-items: end;\r\n}\r\n.favorites {\r\n    border: 1px solid #e7eaec;\r\n    font-size: 15px;\r\n    height: 29px;\r\n    padding: 0 8px;\r\n    border-radius: 3px;\r\n    transition: 0.25s;\r\n    white-space: nowrap;\r\n    user-select: none;\r\n}\r\n.favorites:hover {\r\n    background: #e7eaec70;\r\n}\r\n.favorites:active {\r\n    background: #e7eaec;\r\n}\r\n.item-sentiment {\r\n    border: 1px solid #e7eaec;\r\n    font-size: 15px;\r\n    height: 29px;\r\n    padding: 0 8px;\r\n    border-radius: 3px;\r\n    color: white;\r\n}\r\n.item-sentiment_1 {\r\n    background: #1bb394;\r\n}\r\n.item-sentiment_0 {\r\n    background: #f2c94c;\r\n}\r\n.item-sentiment_-1 {\r\n    background: #ec5d5d;\r\n}\r\n\r\n.nav-pagination {\r\n    margin-left: auto;\r\n    display: flex;\r\n    height: 28px;\r\n    align-items: center;\r\n    padding: 0 4px;\r\n    position: relative;\r\n    z-index: 5;\r\n    user-select: none;\r\n}\r\n.nav-pagination span {\r\n    background: white;\r\n    padding: 0 7px;\r\n    padding-top: 1px;\r\n    cursor: pointer;\r\n    height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n.nav-pagination span:hover,\r\n.nav-pagination span.active {\r\n    border-bottom: 1px solid #3b5998;\r\n    color: #3b5998;\r\n    font-weight: 600;\r\n}\r\n\r\n.result-count {\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif ;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n}\r\n\r\n.result-count__items {\r\n    color: #1cb394;\r\n}\r\n.result-count__resource {\r\n    color: #7cb5ec;\r\n}\r\n\r\n.nav-pagination i {\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    background: white;\r\n    height: 28px;\r\n    width: 22px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    transition: 0.15s;\r\n}\r\n\r\n.nav-pagination i:hover {\r\n    color: white;\r\n    background: #3b5998;\r\n}\r\n\r\n.first-page.icon-w-0 {\r\n    margin-left: 0;\r\n}\r\n\r\n.first-page {\r\n    margin-right: 3px;\r\n    border-radius: 4px 0 0 4px;\r\n}\r\n\r\n.second-page {\r\n    margin-left: 3px;\r\n    border-radius: 0 4px 4px 0;\r\n}\r\n\r\n.hovered-angle {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.hovered-angle:hover .border-radius-0 {\r\n    border-radius: 0;\r\n}\r\n\r\n.icon-w-0 {\r\n    overflow: hidden;\r\n}\r\n\r\n.hovered-angle:not(.hovered-angle:hover) .first-page.icon-w-0 {\r\n    margin-left: 22px;\r\n}\r\n.hovered-angle:not(.hovered-angle:hover) .icon-w-0 {\r\n    width: 0;\r\n}\r\n\r\n.hovered-angle:not(.hovered-angle:hover) .fa-angle-right + .icon-w-0 {\r\n    margin-right: 22px;\r\n}\r\n\r\n.sentiment {\r\n    height: 20px;\r\n    width: 20px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 15px;\r\n}\r\n\r\n.item-sentiments i {\r\n    font-size: 22px;\r\n    cursor: pointer;\r\n    transition: 0.15s;\r\n    opacity: 0.25;\r\n}\r\n\r\n.item-sentiments i.checked-btn,\r\n.item-sentiments i:hover {\r\n    opacity: 1;\r\n    /* font-size: 27px; */\r\n    transform: scale(1.3);\r\n    margin-bottom: -1px;\r\n}\r\ni.negative {\r\n    background: transparent;\r\n    color: #ec5d5d;\r\n}\r\ni.neutral {\r\n    background: transparent;\r\n    color: #f2c94c;\r\n}\r\ni.positive {\r\n    background: transparent;\r\n    color: #1bb394;\r\n}\r\n\r\n.item-sentiments i:not(.item-sentiments i:last-child) {\r\n    margin-right: 7px;\r\n}\r\n.item-modal {\r\n    position: absolute;\r\n    right: 0;\r\n    top: calc(100% + 10px);\r\n    background: white;\r\n    padding: 3px;\r\n    border-radius: 4px;\r\n    border: 1px solid #e7eaec;\r\n    transition: 0.15s;\r\n    opacity: 0;\r\n    user-select: none;\r\n}\r\n.item-modal:not(.item-modal.active) {\r\n    pointer-events: none;\r\n}\r\n.item-modal.active {\r\n    opacity: 1;\r\n}\r\n.item-action i {\r\n    margin-right: 11px;\r\n}\r\n.item-action {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 30px;\r\n    padding: 0 10px;\r\n    white-space: nowrap;\r\n    border-radius: 3px;\r\n}\r\n.item-action:hover {\r\n    background: #f5f5f5;\r\n}\r\n\r\n#project_news .fa-globe,\r\n#project_news .fa-newspaper-o,\r\n#project_news .fa-vk,\r\n#project_news .fa-facebook-square,\r\n#project_news .fa-twitter,\r\n#project_news .fa-telegram,\r\n#project_news .fa-google-plus,\r\n#project_news .fa-youtube-play,\r\n#project_news .fa-odnoklassniki-square {\r\n    font-size: 20px;\r\n    vertical-align: text-bottom;\r\n}\r\n\r\n#project_news .fa-instagram,\r\n#project_news .fa-at,\r\n.publication_news .fa-instagram,\r\n.publication_news .fa-at {\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    width: 19px;\r\n    height: 19px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    vertical-align: text-bottom;\r\n}\r\n#project_news .fa-globe {\r\n    color: #1ab394;\r\n}\r\n#project_news .fa-newspaper-o {\r\n    color: #785f50;\r\n}\r\n#project_news .fa-vk {\r\n    color: #4a76a8;\r\n}\r\n#project_news .fa-facebook-square {\r\n    color: #4267b2;\r\n}\r\n#project_news .fa-telegram {\r\n    color: #1da1f2;\r\n}\r\n#project_news .fa-twitter {\r\n    color: #1da1f2;\r\n}\r\n#project_news .fa-instagram {\r\n    background: linear-gradient(#a900ff, #ea3701, #ec920b);\r\n}\r\n#project_news .fa-google-plus {\r\n    color: #4a76a8;\r\n}\r\n#project_news .fa-youtube-play {\r\n    color: #ff0000;\r\n}\r\n#project_news .fa-odnoklassniki-square {\r\n    color: #ee8208;\r\n}\r\n#project_news .fa-at {\r\n    background: #5a90ce;\r\n    color: #ee8208;\r\n    vertical-align: text-bottom;\r\n}\r\n#project_news .fa-tiktok {\r\n    background: #000;\r\n    color: #fff;\r\n    width: 20px;\r\n    display: flex;\r\n    height: 20px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 13px;\r\n    border-radius: 4px;\r\n    padding-top: 1.3px;\r\n}\r\n\r\n.favorites-modal {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 99999;\r\n    top: 0;\r\n    overflow: hidden;\r\n    /* transition: .15s; */\r\n    height: 100%;\r\n    flex-direction: column;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    background: #00000078 !important;\r\n}\r\n.favorites-modal:not(.favorites-modal.active) {\r\n    display: none;\r\n    /* height: 0;\r\n    padding: 0 !important; */\r\n}\r\n\r\n.favorite-search {\r\n    min-height: 30px;\r\n    background: #e7eaec;\r\n    border-radius: 3px;\r\n}\r\n\r\n.favorite-search .fa-search {\r\n    padding: 0 10px;\r\n    color: #a7b1c2;\r\n}\r\n\r\n.favorite-search input {\r\n    width: 100%;\r\n    background: #e7eaec;\r\n    height: 100%;\r\n    font-size: 16px;\r\n}\r\n\r\n.favorite-search input:focus {\r\n    outline: none;\r\n}\r\n\r\n.favorites-modal-close {\r\n    font-size: 21px;\r\n    padding: 0 4px;\r\n    margin-left: 5px;\r\n    background: red;\r\n    height: 26px;\r\n    width: 26px;\r\n    display: flex;\r\n    align-items: center;\r\n    color: white;\r\n    justify-content: center;\r\n    border-radius: 3px;\r\n}\r\n.favorite-list {\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n    height: calc(100% - 109px);\r\n    user-select: none;\r\n}\r\n\r\n.favorite-list::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-left: 2px;\r\n}\r\n\r\n.favorite-list::-webkit-scrollbar-track {\r\n    margin-left: 2px;\r\n    background-color: transparent;\r\n}\r\n\r\n.favorite-list::-webkit-scrollbar-thumb {\r\n    /*background-color: #eaeaea;*/\r\n    background-color: rgb(170, 227, 255);\r\n    border-radius: 5px;\r\n}\r\n\r\n.favorite input {\r\n    margin-right: 8px;\r\n    height: 16px;\r\n    width: 16px;\r\n    margin-top: 0;\r\n}\r\n\r\n.favorite span {\r\n    font-size: 15px;\r\n}\r\n\r\n.favorite {\r\n    background: #ccc;\r\n    color: white;\r\n    font-weight: 400;\r\n    padding: 1px 11px 0px 11px;\r\n    border-radius: 12px;\r\n    height: 27px;\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    transition: 0.15s;\r\n}\r\n.favorite.list-labels {\r\n    background: transparent;\r\n    color: #333;\r\n    display: flex !important;\r\n    align-items: center !important;\r\n    height: 24px;\r\n    border-radius: 4px;\r\n    padding: 0 6px;\r\n}\r\n\r\n/* .favorite:hover {\r\n    background: #8fa9df;\r\n} */\r\n.favorite:hover {\r\n    background: rgb(28, 179, 148, .4);\r\n}\r\n\r\n.favorite:not(.favorite.list-labels).active,\r\n.favorite:not(.favorite.list-labels):active {\r\n    background: #3b5998;\r\n}\r\n\r\n/* .favorite-buttons {\r\n    padding-top: 9px;\r\n    border-top: 2px solid #e4e4e4;\r\n} */\r\n\r\n.favorite-buttons > input {\r\n    width: 100%;\r\n    border: 1px solid #e4e4e4 !important;\r\n    border-radius: 3px 0px 0px 3px !important;\r\n    border-right: 0px !important;\r\n    padding-left: 9px;\r\n    font-size: 16px;\r\n    outline: none;\r\n}\r\n\r\n.favorite-buttons > input {\r\n    outline: none;\r\n}\r\n\r\n.favorite-apply {\r\n    font-size: 15px;\r\n    height: 31px;\r\n    padding: 0 8px;\r\n    border-radius: 0 3px 3px 0;\r\n    background: #1bb394;\r\n    color: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 1;\r\n    padding-bottom: 2px;\r\n    transition: 0.15s;\r\n    user-select: none;\r\n}\r\n.favorite-apply:hover {\r\n    background: #169077;\r\n}\r\n\r\n.item-favorites-min-height {\r\n    min-height: 236px;\r\n}\r\n\r\n.label-color {\r\n    color: rgb(28, 179, 148) !important;\r\n    cursor: pointer;\r\n}\r\n\r\n.label-color.label-filter {\r\n    color: #cacccc !important;\r\n    transition: .15s;\r\n}\r\n.label-color.label-filter:hover {\r\n    color: rgba(28,179,148,0.7) !important;\r\n}\r\n.label-color.label-filter.selected,\r\n.label-color.label-filter.selected:hover {\r\n    color: rgb(28, 179, 148) !important;\r\n}\r\n\r\n.remove-item-folder {\r\n    margin-left: 4px;\r\n    height: 100%;\r\n    align-items: center;\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    padding-top: 1px;\r\n}\r\n\r\n.close-item-modal {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    margin: 10px 16px;\r\n    font-size: 23px;\r\n    cursor: pointer;\r\n}\r\n\r\n.item-folder {\r\n    cursor: default;\r\n    color: rgb(111, 162, 207);\r\n    border: 1px solid rgb(111, 162, 207);\r\n    border-radius: 3px;\r\n    height: 24px;\r\n    padding: 0 4px;\r\n}\r\n\r\n.item-folder span {\r\n    padding-top: 4px;\r\n    padding-bottom: 1px;\r\n    line-height: 1;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    transition: 0.15s;\r\n    max-width: 160px;\r\n}\r\n\r\n.item-folder:not(.item-folder:last-child) {\r\n    margin-right: 7px;\r\n}\r\n\r\n.item-folder:hover {\r\n    color: white !important;\r\n    background: rgb(111, 162, 207);\r\n}\r\n\r\n.item-folders {\r\n    overflow-x: scroll;\r\n    margin: 0 15px;\r\n    margin-bottom: -8px;\r\n    padding-bottom: 2px;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.item-folders::-webkit-scrollbar {\r\n    /* width: 7px; */\r\n    height: 7px;\r\n    margin-left: 2px;\r\n}\r\n\r\n.item-folders::-webkit-scrollbar-track {\r\n    margin-left: 2px;\r\n    background-color: transparent;\r\n}\r\n\r\n.item-folders::-webkit-scrollbar-thumb {\r\n    background-color: rgb(170, 227, 255);\r\n    border-radius: 5px;\r\n}\r\n\r\n.sort-by-metrics {\r\n    margin-left: auto;\r\n    border-radius: 4px;\r\n    border: 1px solid #3b5998;\r\n}\r\n\r\n/* .sort-by-metric:not(.sort-by-metric:last-child) {\r\n    border-right: 1px solid #ccc;\r\n} */\r\n.sort-by-metric.active,\r\n.sort-by-metric:hover {\r\n    background: #3b5998;\r\n    color: #fff;\r\n    fill: #fff;\r\n}\r\n.sort-by-metric.disabled,\r\n.sort-by-metric.disabled:hover {\r\n    background: transparent;\r\n    color: #ccc;\r\n    fill: #ccc;\r\n    cursor: default;\r\n}\r\n.sort-by-metric.disabled:active {\r\n    pointer-events: none;\r\n}\r\n.sort-by-metric {\r\n    padding: 4px 8px;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    color: #3b5998;\r\n    fill: #3b5998;\r\n}\r\n\r\n.delete-resource-title {\r\n    font-size: 19px;\r\n    background: #ec5e5e;\r\n    color: white;\r\n    padding: 12px;\r\n}\r\n\r\n.delete-resource-modal {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 99999;\r\n    top: 0;\r\n    overflow: hidden;\r\n    /* transition: .15s; */\r\n    height: 100%;\r\n    flex-direction: column;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    background: #00000078 !important;\r\n}\r\n\r\n.delete-resource-modal > div {\r\n    background: white;\r\n    border-radius: 4px;\r\n    /* overflow: hidden; */\r\n    width: 500px;\r\n    box-shadow: 0 0 11px #ffffff6e;\r\n}\r\n.delete-resource {\r\n    padding: 9px 12px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.default-btn {\r\n    height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 8px;\r\n    border-radius: 4px;\r\n}\r\n.delete-resource-btn {\r\n    background: #ec5e5e;\r\n    color: white;\r\n    margin-left: 12px;\r\n}\r\n.cancel-btn {\r\n    border: 1px solid #ccc;\r\n    margin-left: auto;\r\n}\r\n\r\n.full-item-text {\r\n    max-width: 1000px;\r\n    font-size: 16px;\r\n    line-height: 1.3;\r\n    font-weight: 300;\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif ;\r\n}\r\n.full-item-text a {\r\n    color: #23527c;\r\n}\r\n.full-item-text a:hover,\r\n.full-item-text a:focus {\r\n    text-decoration: underline;\r\n}\r\n\r\n/* Scrollbar */\r\n\r\n.scrollbar::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-left: 2px;\r\n}\r\n\r\n.scrollbar::-webkit-scrollbar-track {\r\n    margin-left: 2px;\r\n    background-color: transparent;\r\n}\r\n\r\n.scrollbar::-webkit-scrollbar-thumb {\r\n    /*background-color: #eaeaea;*/\r\n    background-color: rgb(170, 227, 255);\r\n    border-radius: 5px;\r\n}\r\n\r\n.tab-content::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-left: 2px;\r\n}\r\n\r\n.tab-content::-webkit-scrollbar-track {\r\n    margin-left: 2px;\r\n    background-color: transparent;\r\n}\r\n\r\n.tab-content::-webkit-scrollbar-thumb {\r\n    /*background-color: #eaeaea;*/\r\n    background-color: rgb(170, 227, 255);\r\n    border-radius: 5px;\r\n}\r\n\r\n.modal-item_btn {\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: inline-flex;\r\n    height: 35px;\r\n    width: 100%;\r\n    min-width: 127px;\r\n    white-space: nowrap;\r\n    max-width: 150px;\r\n    margin: 0 5px;\r\n    color: inherit;\r\n}\r\n\r\n.modal-item_btn i {\r\n    margin: 0 5px 0 0;\r\n}\r\n\r\n.modal-item_btn.modal-item_btn-sentiment {\r\n    border-radius: 3px;\r\n    color: white;\r\n    padding-top: 1px;\r\n    transition: 0.15s;\r\n}\r\n\r\n.modal-item_btn.modal-item_btn-sentiment.positive {\r\n    background: #1cb394;\r\n}\r\n.modal-item_btn.modal-item_btn-sentiment.positive:hover {\r\n    background: #16987e !important;\r\n}\r\n\r\n.modal-item_btn.modal-item_btn-sentiment.neutral {\r\n    background: #f2b90a;\r\n}\r\n.modal-item_btn.modal-item_btn-sentiment.neutral:hover {\r\n    background: #d8a409 !important;\r\n}\r\n\r\n.modal-item_btn.modal-item_btn-sentiment.negative {\r\n    background: #ec5e5e;\r\n}\r\n.modal-item_btn.modal-item_btn-sentiment.negative:hover {\r\n    background: #d15353 !important;\r\n}\r\n\r\n.modal-item_btn.modal-item_btn-sentiment i {\r\n    margin: 0 0 0 5px;\r\n}\r\n\r\n.red-color {\r\n    color: #ec5d5d;\r\n}\r\n\r\n.red-border-color {\r\n    border-color: #ec5d5d;\r\n}\r\n.toggle-newspaper {\r\n    background: rgb(50, 54, 57);\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 40px;\r\n    padding: 0 13px;\r\n    border-radius: 10px 10px 0 0;\r\n    font-size: 16px;\r\n    letter-spacing: 2px;\r\n    cursor: pointer;\r\n}\r\n.toggle-newspaper i {\r\n    transition: 0.15s;\r\n}\r\n\r\n.comments {\r\n    margin-bottom: 16px;\r\n}\r\n.comment {\r\n    font-size: 14px;\r\n\r\n    padding: 12px 17px 12px 14px;\r\n    border: 1px solid rgba(0, 0, 0, 0.2);\r\n\r\n    box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.2);\r\n    /* display: flex; */\r\n    border-radius: 4px;\r\n    transition: 0.2s;\r\n    position: relative;\r\n    min-height: 50px;\r\n    margin-top: 16px;\r\n    line-height: 1.4;\r\n    display: inline-flex;\r\n    width: 100%;\r\n}\r\n\r\n.comment:hover {\r\n    transform: scale(1.01);\r\n}\r\n\r\n.comment-user {\r\n    color: #000;\r\n    font-weight: 600;\r\n    margin-right: 7px;\r\n    white-space: nowrap;\r\n}\r\n.comment-user:hover {\r\n    color: #000;\r\n    text-decoration: underline;\r\n}\r\n\r\n.comment-text {\r\n    color: #333;\r\n    font-weight: 300;\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif ;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    padding: 1px 0;\r\n}\r\n.comment-text:hover {\r\n    color: #000;\r\n}\r\n\r\n.comment-info {\r\n    position: absolute;\r\n    right: -10px;\r\n    bottom: -10px;\r\n    border: 1px solid #2f4050;\r\n    height: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: 4px;\r\n\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif ;\r\n    background: white;\r\n    color: white;\r\n    font-size: 12px;\r\n}\r\n\r\n.comment-date {\r\n    background: #2f4050;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 5px;\r\n}\r\n.comment-likes {\r\n    color: #2f4050;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 1px 0 6px;\r\n    margin-right: 5px;\r\n}\r\n.comment-likes i {\r\n    margin-right: 5px;\r\n    font-size: 14px;\r\n}\r\n\r\n.comment-title {\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif ;\r\n    margin-right: 10px;\r\n}\r\n\r\n.apply-btn {\r\n    margin-left: auto;\r\n    background: #1ab394;\r\n    color: white;\r\n    border-radius: 3px;\r\n    padding: 0 9px;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 28px;\r\n    font-weight: 600;\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif ;\r\n}\r\n.apply-btn:hover {\r\n    background: #138871;\r\n}\r\n.apply-btn.disabled {\r\n    background: #a7b1c2;\r\n    pointer-events: none;\r\n}\r\n.comment-status {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #676a6c;\r\n    font-size: 15px;\r\n    border: 1px solid;\r\n    border-radius: 4px;\r\n    padding: 0 5px 2px 5px;\r\n    margin-bottom: 3px;\r\n}\r\n.comment-status.comment-error {\r\n    color: #ec5d5d;\r\n}\r\n.comment-status.comment-parsing {\r\n    color: #1cb394;\r\n}\r\n\r\n.search-comments-input {\r\n    padding-left: 8px;\r\n    border: 1px solid #ccc;\r\n    height: 100%;\r\n    margin-right: 10px;\r\n    padding-top: 2px;\r\n    border-radius: 4px;\r\n    width: 100%;\r\n}\r\n\r\n.search-comments-input:focus {\r\n    outline: none;\r\n}\r\n\r\n.modal-item-social-icon {\r\n    position: relative;\r\n    z-index: 0;\r\n}\r\n.modal-item-social-icon.fa-facebook-square::after,\r\n.modal-item-social-icon.fa-odnoklassniki-square::after,\r\n.modal-item-social-icon.fa-telegram::after,\r\n.modal-item-social-icon.fa-youtube-play::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 1px;\r\n    right: 1px;\r\n    top: 0;\r\n    bottom: 0;\r\n    height: 10px;\r\n    background: white;\r\n    z-index: -1;\r\n    margin: auto;\r\n    border-radius: 2px;\r\n}\r\n.modal-item-social-icon.fa-odnoklassniki-square::after {\r\n    height: 14px;\r\n}\r\n.modal-item-social-icon.fa-facebook-square::after {\r\n    height: 17px;\r\n    border-radius: 50%;\r\n    top: 1px;\r\n}\r\n.chat-gpt-modal {\r\n    width: 65% !important;\r\n    height: 80%;\r\n    background: transparent !important;\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif ;\r\n    font-size: 16px;\r\n    box-shadow: none !important;\r\n    /* min-width: 940px; */\r\n    min-width: 65%;\r\n}\r\n\r\n@media (max-width: 1000px) {\r\n    .chat-gpt-modal {\r\n        min-width: 540px;\r\n        width: calc(100% - 20px) !important;\r\n    }\r\n}\r\n.tab-head {\r\n    display: flex;\r\n}\r\n\r\n.tab-item {\r\n    position: relative;\r\n    padding: 8px 10px;\r\n    border: 1px solid #d4d4d4;\r\n    border-radius: 4px 4px 0 0;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n    margin-bottom: -1px;\r\n    /* background: white; */\r\n    \r\n    border-color: transparent !important;\r\n    color: #A7B1C2;\r\n}\r\n\r\n.tab-item:hover {\r\n    color: #676a6c;\r\n}\r\n.tab-item:not(.tab-item.selected):not(.tab-item:hover) {\r\n    color: #929191;\r\n}\r\n.tab-item.selected {\r\n    border-bottom: none;\r\n    background: white;\r\n    color: #495057 !important;\r\n    border-color: #dee2e6 #dee2e6 #fff !important;\r\n}\r\n.tab-content-container {\r\n    background: white;\r\n    overflow: hidden;\r\n    border: 1px solid #d4d4d4;\r\n    border-radius: 0 0 0 5px;\r\n    height: 100%;\r\n}\r\n.tab-content {\r\n    /* padding: 22px; */\r\n    padding: 14px 17px;\r\n    height: calc(100% - 60px);\r\n    overflow-y: scroll;\r\n    overflow-x: visible;\r\n    margin: 2px 2px 0 0;\r\n\r\n    border: 2px solid #e7eaec;\r\n    margin: 14px 17px;\r\n    border-radius: 4px;\r\n}\r\n.imas-tag {\r\n    display: inline !important;\r\n    background: #6FA2CF !important;\r\n    color: #fff !important;\r\n    padding: 0 4px !important;\r\n    border-radius: 3px !important;\r\n    padding-bottom: .1em !important;\r\n}\r\n.similars-count {\r\n    position: absolute;\r\n    right: 50px;\r\n    top: -10px;\r\n    \r\n    color: #ffffffd9;\r\n    background: #3b5998c4;\r\n\r\n    height: 24px;\r\n    font-size: 14px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 1px 6px 0;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    box-shadow: 0 0 5px #3b5998b3;\r\n    transition: .15s;\r\n}\r\n.similars-count:hover {\r\n    color: #fff;\r\n    background: #3b5998;\r\n}\r\n@media (max-width: 1440px) {\r\n    .item-container {\r\n        width: 100%;\r\n    }\r\n}\r\n/* .fa-exclamation {\r\n    color: #3b5998;\r\n    background: white;\r\n    margin-left: 5px;\r\n    width: 15px;\r\n    height: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    padding-left: 1px;\r\n    font-size: 10px;\r\n} */\r\n</style>","<template>\r\n    <div @click.stop=\"select_options_modal = false; used_prompt_list_modal = false;\" class=\"h-full flex flex-col\">\r\n        <!-- <div class=\"sticky top-0 z-[14]\" data-projection-id=\"13\" style=\"transform: none;transform-origin: 50% 50% 0px;opacity: 1;height: 20px;display: flex;align-items: center;\"><h3 class=\"h-9 pb-2 pt-3 px-3 gizmo:px-2 text-xs text-gray-500 font-medium text-ellipsis overflow-hidden break-all bg-gray-50 gizmo:bg-white dark:bg-gray-900 gizmo:dark:bg-black gizmo:text-gizmo-gray-600\" style=\"\r\n    height: auto;\r\n\">Июль</h3></div> -->\r\n        <div class=\"right-modal-menu\">\r\n            <a @click=\"current_user_logs_type = ''\" \r\n                class=\"flex px-2 min-h-[30px] py-1 items-center gap-3 transition-colors duration-200 cursor-pointer rounded-md border dark:border-white/20 gizmo:min-h-0 hover:bg-gray-500/10 gizmo:h-10 gizmo:rounded-lg gizmo:border-[rgba(0,0,0,0.1)] bg-white dark:bg-transparent flex-grow overflow-hidden\">\r\n                <svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\" class=\"icon-sm shrink-0\" height=\"1em\" width=\"1em\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n                    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n                </svg>\r\n                <span class=\"truncate\">Создать чат</span>\r\n            </a>\r\n            <div class=\"gray-scrollbar overflow-y-auto overflow-x-hidden\" style=\"height: calc(100% - 30px);padding-left: 2px;\">\r\n                <a v-for=\"chat_name in user_chat_names\" :key=\"chat_name\"\r\n                    class=\"flex p-2 mt-[4px] items-center gap-3 relative rounded-md hover:bg-gray-100 cursor-pointer break-all group\"\r\n                    :class=\"{\r\n                        'bg-gray-100': chat_name == current_user_logs_type\r\n                    }\"\r\n                    @click=\"current_user_logs_type = chat_name; \"\r\n                    :style=\"{\r\n                        boxShadow: !isCorrectRequest && request_text == chat_name ? '0 0 7px rgb(255 0 0 / 30%)' : '',\r\n                        paddingRight: chat_name == current_user_logs_type ? '2.5rem !important': ''\r\n                    }\"\r\n                >\r\n                    <svg stroke=\"currentColor\"\r\n                        fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        class=\"icon-sm text-black\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>\r\n                    </svg>\r\n                    <input\r\n                        v-if=\"edit_some_chat.previous_name == chat_name && current_user_logs_type == chat_name\"\r\n                        type=\"text\"\r\n                        :maxlength=\"50\"\r\n                        class=\"flex-1 text-ellipsis max-h-5 overflow-hidden break-all relative text-black\"\r\n                        v-model=\"edit_some_chat.name\"\r\n                        :style=\"`outline: 1px solid ${validation_chat_name(edit_some_chat.name) ? 'red' : 'blue'};margin-right: 5px;padding: 8px 1px;`\"\r\n                        @keydown.enter=\"update_user_logs_type_name\">\r\n                    <div v-else class=\"flex-1 text-ellipsis max-h-5 overflow-hidden break-all relative text-black\" style=\"padding: 0 0 14px;\">{{ chat_name }}\r\n                        <div class=\"absolute inset-y-0 right-0 w-8 z-10 bg-gradient-to-l from-white\"></div>\r\n                    </div>\r\n                    <div class=\"absolute flex right-1 z-10 text-gray-700/50 \" :class=\"{\r\n                        hidden: chat_name != current_user_logs_type\r\n                    }\"><button class=\"p-1 hover:text-token-text-primary hover:text-gray-500\">\r\n                            <svg v-if=\"edit_some_chat.previous_name != chat_name\" @click=\"edit_some_chat.previous_name = chat_name;edit_some_chat.name = chat_name;\" stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\"\r\n                                stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-sm\" height=\"1em\" width=\"1em\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 20h9\"></path>\r\n                                <path d=\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"></path>\r\n                            </svg>\r\n                            <svg v-else @click=\"update_user_logs_type_name\" stroke=\"currentColor\" fill=\"none\"\r\n                                stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                class=\"icon-sm\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n                            </svg>\r\n                        </button>\r\n                        <button class=\"p-1 hover:text-token-text-primary hover:text-red-500\">\r\n                            <svg v-if=\"edit_some_chat.previous_name != chat_name\" @click=\"confirm_delete_chat_modal = true\" stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\"\r\n                                stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-sm\" height=\"1em\" width=\"1em\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n                                <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\">\r\n                                </path>\r\n                                <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n                                <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n                            </svg>\r\n                            <svg v-else @click=\"edit_some_chat = { previous_name: null, name: null }\" stroke=\"currentColor\"\r\n                                fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\"\r\n                                stroke-linejoin=\"round\" class=\"icon-sm\" height=\"1em\" width=\"1em\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div\r\n            class=\"padding-[40px] m-auto max-w-[750px] text-center\"\r\n            style=\"font-size: 20px;text-wrap: pretty;color: gray;padding-top: 50px;\"\r\n            v-if=\"current_user_logs.length == 0\"\r\n        >\r\n            Готов ответить на ваши вопросы, помочь с задачами или просто поболтать. <br><br>Чем я могу помочь сегодня?\r\n        </div>\r\n        <div class=\"chatgpt-messages w-full flex flex-col text-sm\">\r\n            <template v-for=\"(log, index) in current_user_logs\" :key=\"log?.id\">\r\n\r\n                <div class=\"group w-full text-token-text-primary border-b border-black/10 gizmo:border-0 border-gray-400/50 gizmo:border-0 gizmo:bg-transparent  gizmo:bg-transparent\"\r\n                    data-testid=\"conversation-turn-2\" style=\"--avatar-color: #19c37d;\">\r\n                    <div class=\"p-3 justify-center text-base md:gap-6 md:py-4 m-auto\">\r\n                        <div\r\n                            class=\"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[50rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] xl:max-w-[45rem] }\">\r\n                            <div class=\"flex-shrink-0 flex flex-col relative items-end\">\r\n                                <div>\r\n                                    <div class=\"relative flex\">\r\n                                        <i class=\"fa fa-user\"\r\n                                            style=\"font-size: 25px;text-align: center;width: 36px;color: #bda1ff;\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- currentLogsPromt -->\r\n                                <!-- currentLogsResult -->\r\n                                <div v-show=\"Array.isArray(log?.promt) && log?.promt?.length > 1\" class=\"text-sm flex items-center justify-center gap-1 absolute top-2 -translate-x-full\">\r\n                                    <button \r\n                                        @click=\"minusCurrentPromt(log, index)\"\r\n                                        :style=\"currentLogsPromt[index] == 0 && 'color: darkgray;pointer-events: none;'\"\r\n                                    >\r\n                                        <svg\r\n                                            stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\"\r\n                                            stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-xs\" height=\"1.2em\"\r\n                                            width=\"1.2em\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <polyline points=\"15 18 9 12 15 6\"></polyline>\r\n                                        </svg>\r\n                                    </button>\r\n                                    <span class=\"flex-grow flex-shrink-0 tabular-nums\">{{ ((currentLogsPromt[index] + 1) || log?.promt.length) }} / {{ log?.promt?.length }}</span>\r\n                                    <button\r\n                                        @click=\"plusCurrentPromt(log, index)\"\r\n                                        :style=\"(currentLogsPromt[index] ?? (log?.promt.length - 1)) == (log?.promt.length - 1) && 'color: darkgray;pointer-events: none;'\"\r\n                                    >\r\n                                        <svg\r\n                                            stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\"\r\n                                            stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-xs\" height=\"1.2em\"\r\n                                            width=\"1.2em\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <polyline points=\"9 18 15 12 9 6\"></polyline>\r\n                                        </svg>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 gizmo:w-full md:gap-3 lg:w-[calc(100%-115px)] gizmo:text-gizmo-gray-600 gizmo:text-gray-300\">\r\n                                \r\n                                <div class=\"flex flex-grow flex-col gap-3 max-w-full\" v-show=\"editable_logs[getLogPromt(log, index)]\">\r\n                                    <span\r\n                                        :id=\"editable_logs[getLogPromt(log, index)] && 'chatgpt-editable-text'\"\r\n                                        tabindex=\"0\"\r\n                                        data-id=\"root\"\r\n                                        rows=\"1\"\r\n                                        placeholder=\"Отправить сообщение\"\r\n                                        :class=\"{\r\n                                            'incorrect-request': !isCorrectRequest || user_logs_loading[current_user_logs_type]\r\n                                        }\"\r\n                                        class=\"chatgpt-textbox-scrollbar gray-scrollbar m-0 w-full resize-none border-0 bg-transparent py-[10px] pr-10 focus:ring-0 focus-visible:ring-0 bg-transparent md:pr-12 gizmo:md:py-3.5 pl-2 md:pl-4 focus:outline-none\"\r\n                                        style=\"overflow-y: auto;max-height: 200px;min-height: 42px;line-height: 1.3;color: black;\"\r\n                                        role=\"textbox\"\r\n                                        contenteditable=\"plaintext-only\"\r\n                                        :style=\"{\r\n                                            boxShadow: `0 0 7px ${isCorrectRequest ? 'rgba(0,0,0,.1)' : 'rgba(255,0,0,.3)'}`,\r\n                                            borderRadius: '8px'\r\n                                        }\"\r\n                                        @input=\"editable_log_text = $event.target.innerText\"\r\n                                        @keydown.enter=\"edit_log($event, log, index)\"\r\n                                    >{{ getLogPromt(log, index) }}</span>\r\n                                    <div class=\"text-center mt-2 flex justify-center\">\r\n                                        <button class=\"btn relative btn-primary mr-2\" as=\"button\" @click=\"edit_log($event, log, index)\">\r\n                                            <div class=\"flex w-full gap-2 items-center justify-center\">Сохранить и отправить</div>\r\n                                        </button>\r\n                                        <button class=\"btn relative btn-neutral\" as=\"button\" @click=\"editable_logs[getLogPromt(log, index)] = false\">\r\n                                            <div class=\"flex w-full gap-2 items-center justify-center\">Отмена</div>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"flex flex-grow flex-col gap-3 max-w-full\" v-show=\"!editable_logs[getLogPromt(log, index)]\">\r\n                                    <div class=\"min-h-[20px] flex flex-col items-start gap-3 whitespace-pre-wrap break-words overflow-x-auto\">\r\n                                        <div class=\"\">{{ getLogPromt(log, index) }}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    v-show=\"!editable_logs[getLogPromt(log, index)]\"\r\n                                    class=\"text-gray-400 flex self-end lg:self-center justify-center gizmo:lg:justify-start gizmo:mt-0 visible lg:gap-1 lg:absolute lg:top-0 lg:translate-x-full lg:right-0 lg:mt-0 lg:pl-2 gap-2 md:gap-3 gizmo:absolute gizmo:right-0 gizmo:top-1/2 gizmo:-translate-y-1/2 gizmo:transform\">\r\n                                    <button\r\n                                        class=\"p-1 gizmo:pl-0 rounded-md disabled:hover:text-gray-400 hover:text-gray-200 text-gray-400 hover:bg-gray-100 hover:text-gray-700 hover:bg-gray-300 md:invisible md:group-hover:visible\"\r\n                                        @click=\"editable_logs[getLogPromt(log, index)] = true\"\r\n                                    >\r\n                                        <!-- @click=\"() => {current_editable_log_index = index + 1;send_gpt_request($event)}\" -->\r\n                                        <svg\r\n                                            stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\"\r\n                                            stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-sm\" height=\"1.2em\"\r\n                                            width=\"1.2em\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                                            <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                                        </svg>\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"flex justify-between empty:hidden lg:block\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"group w-full text-token-text-primary border-b border-black/10 gizmo:border-0 border-gray-400/50 gizmo:border-0 bg-gray-100 gizmo:bg-transparent bg-[#444654] gizmo:bg-transparent\"\r\n                    data-testid=\"conversation-turn-3\" style=\"--avatar-color: #19c37d;\">\r\n                    <div class=\"p-4 justify-center text-base md:gap-6 md:py-4 m-auto\">\r\n                        <div\r\n                            class=\"flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[50rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] xl:max-w-[45rem] }\">\r\n                            <div class=\"flex-shrink-0 flex flex-col relative items-end\">\r\n                                <div>\r\n                                    <div class=\"relative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center\"\r\n                                        style=\"background-color: rgb(25, 195, 125); width: 36px; height: 36px;padding: 5px;border-radius: 5px;\">\r\n                                        <svg width=\"41\" height=\"41\" viewBox=\"0 0 41 41\" fill=\"none\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\" class=\"icon-md\" role=\"img\"><text x=\"-9999\"\r\n                                                y=\"-9999\">ChatGPT</text>\r\n                                            <path\r\n                                                d=\"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z\"\r\n                                                fill=\"currentColor\"></path>\r\n                                        </svg>\r\n                                    </div>\r\n                                </div>\r\n                                <div v-show=\"(typeof log.result != 'string' && getLogResultArray(log, index).length > 1)\" class=\"text-sm flex items-center justify-center gap-1 absolute top-2 -translate-x-full\">\r\n                                    <button\r\n                                        @click=\"minusCurrentResult(log, index)\"\r\n                                        :style=\"currentLogsResult[getLogPromt(log, index)] == 0 && 'color: darkgray;pointer-events: none;'\"\r\n                                    >\r\n                                        <svg\r\n                                            stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\"\r\n                                            stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-xs\" height=\"1.2em\"\r\n                                            width=\"1.2em\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <polyline points=\"15 18 9 12 15 6\"></polyline>\r\n                                        </svg>\r\n                                    </button>\r\n                                    <span class=\"flex-grow flex-shrink-0 tabular-nums\">{{ ((currentLogsResult[getLogPromt(log, index)] + 1) || getLogResultArray(log, index).length) }} / {{ getLogResultArray(log, index).length }}</span>\r\n                                    <button\r\n                                        @click=\"plusCurrentResult(log, index)\"\r\n                                        :style=\"(currentLogsResult[getLogPromt(log, index)] ?? (getLogResultArray(log, index).length - 1)) == (getLogResultArray(log, index).length - 1) && 'color: darkgray;pointer-events: none;'\"\r\n                                    >\r\n                                        <svg\r\n                                            stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\"\r\n                                            stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-xs\" height=\"1.2em\"\r\n                                            width=\"1.2em\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <polyline points=\"9 18 15 12 9 6\"></polyline>\r\n                                        </svg>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 gizmo:w-full md:gap-3 lg:w-[calc(100%-115px)] agent-turn\">\r\n                                <div class=\"flex flex-grow flex-col gap-3 max-w-full\">\r\n                                    <div\r\n                                        class=\"min-h-[20px] flex flex-col items-start gap-3 whitespace-pre-wrap break-words overflow-x-auto\">\r\n                                        <div class=\"markdown prose w-full break-words prose-invert light\">\r\n                                            <p\r\n                                                :class=\"{\r\n                                                    'gpt-response-loading': !getLogResult(log, index)\r\n                                                }\"\r\n                                                class=\"font-bold\"\r\n                                            >{{ getLogResult(log, index) || '...' }}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"flex justify-between empty:hidden lg:block\">\r\n                                    <div\r\n                                        class=\"text-gray-400 flex self-end lg:self-center justify-center gizmo:lg:justify-start gizmo:mt-0 visible lg:gap-1 lg:absolute lg:top-0 lg:translate-x-full lg:right-0 lg:mt-0 lg:pl-2 gap-2 md:gap-3\">\r\n                                        <button\r\n                                            class=\"flex ml-auto gizmo:ml-0 gap-2 items-center rounded-md p-1 text-sm gizmo:gap-1.5 gizmo:pl-0 text-gray-400 hover:bg-gray-300 hover:text-gray-200 disabled:hover:text-gray-400 hover:bg-gray-100 hover:text-gray-700\"\r\n                                            @click=\"copyResponse(log)\">\r\n                                            <svg v-show=\"!copied_log[getLogResult(log, index)]\" stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\"\r\n                                                viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                                class=\"icon-sm\" height=\"1.2em\" width=\"1.2em\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\">\r\n                                                </path>\r\n                                                <rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect>\r\n                                            </svg>\r\n                                            <svg v-show=\"copied_log[getLogResult(log, index)]\" stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\"\r\n                                                viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                                class=\"icon-sm\" height=\"1.2em\" width=\"1.2em\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n                                            </svg>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n            <!-- <button\r\n                class=\"cursor-pointer absolute right-6 gizmo:right-1/2 bottom-[124px] md:bottom-[180px] gizmo:md:bottom-[143px] lg:bottom-[120px] z-10 rounded-full border border-gray-200 gizmo:border-black/10 bg-gray-100 text-gray-600 border-white/10 bg-white/10 gizmo:bg-token-surface-primary text-gray-200\"><svg\r\n                    stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\" class=\"icon-sm m-1\" height=\"1.2em\" width=\"1.2em\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n                    <polyline points=\"19 12 12 19 5 12\"></polyline>\r\n                </svg>\r\n            </button> -->\r\n        </div>\r\n        <div\r\n            v-if=\"user_logs[current_user_logs_type]?.length && !user_logs_loading[current_user_logs_type]\"\r\n            class=\"mt-auto mx-auto pb-[14px] pt-[20px]\"\r\n            style=\"border-radius: 0px 0px 5px 5px;position: absolute;bottom: calc(10% - -47px);right: calc(140px + 17px);z-index: 1;padding: 0px;\">\r\n            <button @click=\"regenerate_gpt_request\" class=\"btn relative btn-neutral -z-0 whitespace-nowrap bg-white border hover:bg-gray-200\" as=\"button\" style=\"border-width: 1px;border-color: lightgray;\">\r\n                <div class=\"flex w-full gap-2 items-center justify-center\"><svg stroke=\"currentColor\" fill=\"none\"\r\n                        stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        class=\"flex-shrink-0 icon-xs\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <polyline points=\"1 4 1 10 7 10\"></polyline>\r\n                        <polyline points=\"23 20 23 14 17 14\"></polyline>\r\n                        <path d=\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"></path>\r\n                    </svg>Повторная генерация</div>\r\n            </button>\r\n        </div>\r\n        <div class=\"w-full mt-auto mx-auto pb-[14px] pt-[20px]\"\r\n            style=\"border-radius: 0 0 5px 5px;position: absolute;bottom: calc(10% - 6px);right: 17px;left: 17px;max-width: 720px;z-index: 1;padding: 0;\">\r\n\r\n            <div class=\"flex w-full items-center\">\r\n                <div class=\"flex flex-col w-full flex-grow relative border border-black/10 gizmo:border-gray-100/10 border-gray-400/50 text-white rounded-xl shadow-xs shadow-xs bg-gray-700 bg-white gizmo:bg-[#F5F5F5] gizmo:shadow-[0_0_0_2px_rgba(255,255,255,0.95)] gizmo:shadow-[0_0_0_2px_rgba(52,53,65,0.95)]\"\r\n                    style=\"border-radius: 0.75rem;background: white;/* background: rgb(55 65 81/var(--tw-bg-opacity)); */box-shadow: 0 0 transparent, 0 0 transparent, 0 0 15px rgba(0,0,0,.1);border: none;\">\r\n                    <span id=\"chatgpt-prompt-textarea\" tabindex=\"0\" data-id=\"root\" rows=\"1\"\r\n                        placeholder=\"Отправить сообщение\"\r\n                        :class=\"{\r\n                            'incorrect-request': !isCorrectRequest || user_logs_loading[current_user_logs_type]\r\n                        }\"\r\n                        class=\"chatgpt-textbox-scrollbar gray-scrollbar m-0 w-full resize-none border-0 bg-transparent py-[10px] pr-10 focus:ring-0 focus-visible:ring-0 bg-transparent md:pr-12 gizmo:md:py-3.5 pl-3 md:pl-4 focus:outline-none\"\r\n                        style=\"overflow-y: auto;max-height: 200px;min-height: 42px;line-height: 1.3;color: black;\"\r\n                        role=\"textbox\" contenteditable='plaintext-only' :style=\"{\r\n                            boxShadow: `0 0 7px ${isCorrectRequest ? 'rgba(0,0,0,.1)' : 'rgba(255,0,0,.3)'}`,\r\n                            borderRadius: '8px'\r\n                        }\"\r\n                        @input=\"request_text = $event.target.innerText\"\r\n                        @keydown.enter=\"() => {current_editable_log_index = current_user_logs?.length;send_gpt_request($event)}\"></span>\r\n                    <!-- <span class=\"textarea\" role=\"textbox\" contenteditable></span> -->\r\n                    <button @click=\"() => {current_editable_log_index = current_user_logs?.length;send_gpt_request($event)}\"\r\n                        class=\"chatgpt-request-send absolute p-1 rounded-md md:p-2 hover:bg-gray-900 disabled:hover:bg-transparent disabled:text-gray-400 enabled:bg-brand-purple gizmo:enabled:bg-transparent gizmo:text-gray-500 gizmo:text-gray-300 transition-colors disabled:opacity-40\"\r\n                        data-testid=\"send-button\" style=\"bottom: 7.5px;right: 9px;\">\r\n                        <span class=\"\" data-state=\"closed\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                class=\"icon-sm md:m-0\" width=\"16\" style=\"margin: 1px 1px 1px 2px !important\">\r\n                                <path\r\n                                    d=\"M.5 1.163A1 1 0 0 1 1.97.28l12.868 6.837a1 1 0 0 1 0 1.766L1.969 15.72A1 1 0 0 1 .5 14.836V10.33a1 1 0 0 1 .816-.983L8.5 8 1.316 6.653A1 1 0 0 1 .5 5.67V1.163Z\"\r\n                                    fill=\"currentcolor\"></path>\r\n                            </svg>\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"w-full mt-auto mx-auto pb-[14px] pt-[20px]\"\r\n            style=\"border-radius: 0px 0px 5px 5px;position: absolute;bottom: calc(10% - 16px);right: 26px;left: 19px;width: calc(100% - 30px);width: calc(100% - 46px);box-shadow: rgb(255, 255, 255) 0px -99px 58px -18px inset;height: 138px;pointer-events: none;\">\r\n        </div>\r\n\r\n        <div\r\n            class=\"modal fade left-0 right-0 top-0 bottom-0\"\r\n            id=\"exampleModal\"\r\n            tabindex=\"-1\"\r\n            aria-labelledby=\"exampleModalLabel\"\r\n            aria-hidden=\"true\"\r\n            :class=\"{\r\n                show: confirm_delete_chat_modal\r\n            }\"\r\n            :style=\"confirm_delete_chat_modal ? '' : 'opacity: 0;pointer-events: none;'\"\r\n            @click=\"confirm_delete_chat_modal = false\">\r\n            <div class=\"modal-dialog\" style=\"width: 500px;transition: .15s;\" :style=\"confirm_delete_chat_modal ? 'top: 25%;' : ''\" @click.stop>\r\n                <div class=\"modal-content\" style=\"border-radius: 10px;\">\r\n                    <div class=\"modal-header\">\r\n                        <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\" style=\"font-size: 26px;\">Удалить чат?</h1>\r\n                    </div>\r\n                    <div class=\"modal-body\" style=\"line-height: 1.42857143;\">Будет удален следующий чат: <b>{{ current_user_logs_type }}</b></div>\r\n                    <div class=\"modal-footer\" style=\"height: auto;border-top: 1px solid #e5e5e5;\">\r\n                        <button class=\"btn btn-w-m btn-default\" @click=\"confirm_delete_chat_modal = false\" style=\"min-width: unset;margin-right: 10px;\">Отмена</button>\r\n                        <button class=\"btn btn-w-m btn-danger\" @click=\"delete_user_logs_by_type\" style=\"min-width: unset;\">Удалить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div\r\n            class=\"modal fade left-0 right-0 top-0 bottom-0\"\r\n            id=\"exampleModal\"\r\n            tabindex=\"-1\"\r\n            aria-labelledby=\"exampleModalLabel\"\r\n            aria-hidden=\"true\"\r\n            :class=\"{\r\n                show: chatgpt_error_modal\r\n            }\"\r\n            :style=\"chatgpt_error_modal ? '' : 'opacity: 0;pointer-events: none;'\"\r\n            @click=\"chatgpt_error_modal = false\">\r\n            <div class=\"modal-dialog\" style=\"width: 500px;transition: .15s;\" :style=\"chatgpt_error_modal ? 'top: 25%;' : ''\" @click.stop>\r\n                <div class=\"modal-content\" style=\"border-radius: 10px;\">\r\n                    <div class=\"modal-header\">\r\n                        <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\" style=\"font-size: 26px;\">Ошибка при формировании ответа</h1>\r\n                    </div>\r\n                    <div class=\"modal-body\" style=\"line-height: 1.42857143;\">Извините, ваш запрос содержит слишком много слов.<br>Пожалуйста, сократите текст запроса.</div>\r\n                    <div class=\"modal-footer\" style=\"height: auto;border-top: 1px solid #e5e5e5;\">\r\n                        <button class=\"btn btn-w-m btn-primary\" @click=\"chatgpt_error_modal = false\" style=\"min-width: unset;\">Хорошо</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Configuration, OpenAIApi } from \"openai\"\r\nimport { chatgpt_item, chatgpt_tab } from '@/use/data/index'\r\nimport { getGptUserLogs } from '@/use/api'\r\nimport { getLang } from \"@/use/utils/langIs\"\r\nimport \"@/use/utils/index\"\r\nimport axios from 'axios'\r\n\r\nconst configuration = new Configuration({\r\n    apiKey: process.env.VUE_APP_APIKEY,\r\n});\r\n\r\nconst openai = new OpenAIApi(configuration);\r\n\r\nexport default {\r\n    data() {\r\n        const default_requests = {\r\n            \"бизнес\": \"с точки зрения бизнеса\",\r\n            \"государство\": \"с точки зрения государства\",\r\n            \"граждане страны\": \"с точки зрения гражданина страны\",\r\n            \"сил.структуры\": \"с точки зрения силовых структур\",\r\n            \"разные т.з.\": \"с разных точек зрения\",\r\n            \"пресс-релиз\": \"и составь пресс-релиз по этой публикации, объемом до 1800 знаков, на русском языке\",\r\n            \"план действий таблицей\": \"и составь план действий для всех участников этой ситуации для ее разрешения и улучшения\",\r\n            \"выработай рекомендации\": \"и выработай список из 3-5 рекомендаций для улучшения деятельности организации ... по описанной ситуации\",\r\n            \"негатив в позитив\": \"и предложи 5 идей как отреагировать на эту публикацию так, чтобы негативный эффект для организации ... перевести в позитивный\",\r\n        };\r\n        const tab_info = `Анализ перспективы - это инструмент, при помощи которого вы можете получить от языковой модели подробный анализ публикации с той или иной точки зрения. На вход GPT подается выражение - запрос: <b>\"Проведите подробный анализ данной новости с точки зрения ...\"</b> <br> В меню <b>\"Условие\"</b> можно выбрать одну из общественных групп или задать свою.<br><br> После выбора нажмите <b>\"Запуск\"</b> и подождите, пока сформируется ответ (10-20 секунд).`\r\n        return {\r\n            tab_info: tab_info,\r\n            default_type_requests: {\r\n                analyze: 'Проведите подробный анализ данной новости',\r\n                reaction: 'Проанализируйте данную новость и сформируйте публичный комментарий для прессы по событию от лица',\r\n                generalization: 'Сформулируйте главную информацию новости в 3-4 предложения. Затем выделите основных действующих лиц, компании, службы',\r\n            },\r\n            request_type: 'analyze',\r\n            default_requests: default_requests,\r\n            select_options_modal: false,\r\n\r\n            condition: \"\",\r\n            input: \"\",\r\n            output: \"\",\r\n            confirm_delete_chat_modal: false,\r\n            dropdown_menu: false,\r\n            used_prompt_list_modal: false,\r\n            used_prompt_list: [],\r\n            // all_default_request_list: [...Object.values(default_requests), `${this.i18n(\"Обобщение\")}`, `${this.i18n(\"организации ... в позитивном ключе, объемом на английском языке.\")}`],\r\n            answer_lang: {\r\n                ru: 'Russian',\r\n                en: 'English',\r\n                kz: 'Kazakh',\r\n            },\r\n            additional_info: '',\r\n\r\n            analyze_prompts_modal: null,\r\n            reaction_prompts_modal: null,\r\n            request_text: '',\r\n            current_user_logs_type: '',\r\n            user_logs: {},\r\n            user_logs_loading: {},\r\n            edit_some_chat: {\r\n                previous_name: null,\r\n                name: null,\r\n            },\r\n            chatgpt_error_modal: false,\r\n            currentLogsResult: {},\r\n            currentLogsPromt: {},\r\n            current_editable_log_index: 0,\r\n            editable_logs: {},\r\n            copied_log: {},\r\n        }\r\n    },\r\n    setup() {\r\n        return {\r\n            getGptUserLogs,\r\n            chatgpt_item,\r\n            chatgpt_tab,\r\n            getLang,\r\n        }\r\n    },\r\n    computed: {\r\n        current_user_logs() {\r\n            if (!this.current_user_logs_type) return []\r\n\r\n            let user_logs = [];\r\n            \r\n            JSON.parse(JSON.stringify(this.user_logs[this.current_user_logs_type] ?? []))?.forEach(log => {\r\n                if (user_logs.length == 0 || (user_logs?.at(log.news_id)) == undefined) {\r\n                    log.result = {\r\n                        [log.promt]: [log.result]\r\n                    }\r\n                    log.promt = [log.promt]\r\n                    user_logs.push(log)\r\n                    return;\r\n                }\r\n                let lastLog = user_logs?.at(log.news_id) ?? log;\r\n\r\n                // В каком формате хранить чтобы потом мочь свапать\r\n\r\n                if (!Array.isArray(lastLog?.promt)) {\r\n                    lastLog.promt = [lastLog?.promt];\r\n                }\r\n                if (!lastLog?.promt.includes(log.promt)) {\r\n                    lastLog?.promt?.push(log.promt)\r\n                }\r\n                \r\n                if (typeof lastLog.result == 'string') {\r\n                    lastLog.result = {};\r\n                }\r\n                if (lastLog.result[log.promt] === undefined) {\r\n                    lastLog.result[log.promt] = [];\r\n                }\r\n                lastLog.result[log.promt] = [...lastLog.result[log.promt], log.result]\r\n\r\n                user_logs[log.news_id] = lastLog;\r\n            });\r\n\r\n            user_logs = user_logs.filter(val => val)\r\n\r\n            console.log('user_logs', user_logs);\r\n\r\n            return user_logs\r\n        },\r\n        isCorrectRequest() {\r\n            return !(['analyze','reaction',...this.user_chat_names].includes(this.request_text))\r\n        },\r\n        load_circle_analyze() {\r\n            return this.chatgpt_item?.logs && this.condition && this.chatgpt_item?.logs[this.condition] == 'loading'\r\n        },\r\n        user_chat_names() {\r\n            let user_log_types = Object.entries(this.user_logs)\r\n                ?.map(\r\n                    ([chat_name, logs]) => {\r\n                        const timestamp = Math.max(...logs.map(\r\n                            log => (new Date(log.date).valueOf())\r\n                        ))\r\n                        return [chat_name, timestamp]\r\n                    }\r\n                );\r\n\r\n            user_log_types?.sort((a,b) => (b[1] - a[1]))\r\n\r\n            return user_log_types?.map((user_log) => user_log[0])\r\n        },\r\n    },\r\n    methods: {\r\n        async edit_log(event, log, index) {\r\n            this.current_editable_log_index = index;\r\n            this.request_text = document.querySelector('#chatgpt-editable-text').innerText;\r\n            this.editable_logs[this.getLogPromt(log, index)] = false;\r\n            await this.send_gpt_request(event);\r\n        },\r\n        getLogPromt(log, index) {\r\n            return log?.promt[\r\n                this.currentLogsPromt[index] ?? (log?.promt?.length - 1)\r\n            ];\r\n        },\r\n        getLogResult(log, index) {\r\n            let temp_promt = log?.promt[\r\n                this.currentLogsPromt[index] ?? (log?.promt?.length - 1)\r\n            ];\r\n\r\n            return log?.result[temp_promt]?.at(this.currentLogsResult[temp_promt] ?? -1);\r\n        },\r\n        getLogResultArray(log, index) {\r\n            let temp_promt = log?.promt[\r\n                this.currentLogsPromt[index] ?? (log?.promt?.length - 1)\r\n            ];\r\n\r\n            return log?.result[temp_promt] ?? [];\r\n        },\r\n        minusCurrentResult(log, index) {\r\n            let temp_promt = this.getLogPromt(log, index);\r\n            let temp_results = this.getLogResultArray(log, index);\r\n\r\n            if (this.currentLogsResult[temp_promt] == undefined) {\r\n                this.currentLogsResult[temp_promt] = temp_results.length - 1;\r\n            }\r\n            this.currentLogsResult[temp_promt] = (this.currentLogsResult[temp_promt] - 1).minmax(0, temp_results.length - 1)\r\n        },\r\n        plusCurrentResult(log, index) {\r\n            let temp_promt = this.getLogPromt(log, index);\r\n            let temp_results = this.getLogResultArray(log, index);\r\n\r\n            if (this.currentLogsResult[temp_promt] == undefined) {\r\n                this.currentLogsResult[temp_promt] = temp_results.length - 1;\r\n            }\r\n            this.currentLogsResult[temp_promt] = (this.currentLogsResult[temp_promt] + 1).minmax(0, temp_results.length - 1)\r\n        },\r\n        minusCurrentPromt(log, index) {\r\n            if (this.currentLogsPromt[index] == undefined) {\r\n                this.currentLogsPromt[index] = log?.promt?.length - 1;\r\n            }\r\n            this.currentLogsPromt[index] = (this.currentLogsPromt[index] - 1).minmax(0, log?.promt?.length - 1)\r\n        },\r\n        plusCurrentPromt(log, index) {\r\n            if (this.currentLogsPromt[index] == undefined) {\r\n                this.currentLogsPromt[index] = log?.promt?.length - 1;\r\n            }\r\n            this.currentLogsPromt[index] = (this.currentLogsPromt[index] + 1).minmax(0, log?.promt?.length - 1)\r\n        },\r\n        regenerate_gpt_request() {\r\n            const index = this.current_user_logs.length - 1;\r\n            this.current_editable_log_index = index;\r\n            const temp_log = this.current_user_logs?.at(index);\r\n            this.request_text = this.getLogPromt(temp_log, index);\r\n\r\n            this.currentLogsResult[this.request_text] = this.getLogResultArray(temp_log, index).length - 1\r\n            this.send_gpt_request();\r\n        },\r\n        update_user_logs_type_name() {\r\n            const new_chat_name = this.edit_some_chat.name;\r\n            const previous_name_chat_name = this.edit_some_chat.previous_name;\r\n            this.edit_some_chat = {\r\n                previous_name: null,\r\n                name: null,\r\n            };\r\n            console.log('edit_some_chat.name =', new_chat_name);\r\n\r\n            if (this.validation_chat_name(new_chat_name) || new_chat_name == this.current_user_logs_type) return;\r\n\r\n            this.user_logs[new_chat_name] = this.user_logs[this.current_user_logs_type];\r\n\r\n            delete this.user_logs[this.current_user_logs_type];\r\n\r\n            this.current_user_logs_type = new_chat_name;\r\n            \r\n            setTimeout(() => {\r\n                this.current_user_logs_type = new_chat_name;\r\n            }, 10)\r\n\r\n            let formData = new FormData();\r\n\r\n            formData.append('old_type', previous_name_chat_name)\r\n            formData.append('new_type', new_chat_name)\r\n\r\n            axios.post(`/gpt-service/update-user-logs-type`, formData)\r\n                .then((response) => {\r\n                    console.log('update-user-logs-type = ', response);\r\n                    // if (response?.data == 1) {\r\n                    // }\r\n                })\r\n                .catch(error => {\r\n                    console.log('error', error);\r\n                })\r\n        },\r\n        validation_chat_name(new_chat_name) {\r\n            let temp_user_logs = Object.keys(this.user_logs)?.filter(chat_name => chat_name != new_chat_name);\r\n            return temp_user_logs.includes(new_chat_name) || !new_chat_name;\r\n        },\r\n        delete_user_logs_by_type() {\r\n\r\n            this.confirm_delete_chat_modal = false;\r\n\r\n            delete this.user_logs[this.current_user_logs_type];\r\n\r\n            let formData = new FormData();\r\n\r\n            formData.append('type', this.current_user_logs_type)\r\n\r\n            this.current_user_logs_type = '';\r\n\r\n            axios.post(`/gpt-service/delete-user-logs`, formData)\r\n                .then((response) => {\r\n                    console.log('delete-user-logs = ', response);\r\n                    // if (response?.data == 1) {\r\n                    // }\r\n                })\r\n                .catch(error => {\r\n                    console.log('error', error);\r\n                })\r\n        },\r\n        copyResponse(log, index) {\r\n\r\n            var tmp = document.createElement(\"INPUT\");\r\n            tmp.value = this.getLogResult(log, index);\r\n\r\n            document.body.appendChild(tmp);\r\n            tmp.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(tmp);\r\n\r\n            const temp_result = this.getLogResult(log, index);\r\n\r\n            this.copied_log[temp_result] = true;\r\n            setTimeout(() => {\r\n                this.copied_log[temp_result] = false;\r\n            }, 1500);\r\n        },\r\n        scrollToResponse() {\r\n            setTimeout(() => {\r\n                let element = document.querySelector('.chatgpt-messages > *:last-child');\r\n\r\n                if (element) element.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n            }, 20);\r\n        },\r\n        async send_gpt_request(event) {\r\n            if (!this.request_text?.length || (event?.shiftKey) || !this.isCorrectRequest || this.user_logs_loading[this.current_user_logs_type]) return;\r\n\r\n            setTimeout(() => {\r\n                document.querySelector('#chatgpt-prompt-textarea').innerHTML = '';\r\n            }, 10);\r\n\r\n            const temp_request_text = this.request_text;\r\n            console.log('send_gpt_request', temp_request_text);\r\n            const temp_current_editable_index = this.current_editable_log_index;\r\n            const temp_current_user_logs = this.current_user_logs;\r\n\r\n            this.request_text = '';\r\n\r\n            console.log('send_gpt_request', temp_request_text)\r\n\r\n            this.chatgpt_error = false;\r\n\r\n            let type = this.current_user_logs_type ?? temp_request_text;\r\n\r\n            if (!type || (typeof type) != 'string' || type == '') {\r\n                this.current_user_logs_type = type = temp_request_text;\r\n            }\r\n            \r\n            this.current_user_logs_type = type = type.slice(0, 50);\r\n\r\n            if (!this.user_logs[type]) {\r\n                this.user_logs[type] = [];\r\n            }\r\n\r\n            const maxLength = 28_000;\r\n            let textLength = parseInt((temp_request_text).length);\r\n            let previousMessages = [];\r\n\r\n            console.log('user_logs', this.user_logs[type]);\r\n\r\n            for (let i = temp_current_user_logs.length - 1; i >= 0; i--) {\r\n                const log = temp_current_user_logs[i];\r\n\r\n                textLength += parseInt((this.getLogPromt(log, i) + this.getLogResult(log, i)).length);\r\n\r\n                if (textLength >= maxLength) break;\r\n\r\n                previousMessages.push({ role: 'user', content: this.getLogPromt(log, i) });\r\n                previousMessages.push({ role: 'assistant', content: this.getLogResult(log, i) });\r\n\r\n                console.log('temp_current_user_logs content', this.getLogResult(log, i), log, i, this.currentLogsResult);\r\n            }\r\n\r\n            delete\r\n\r\n            this.user_logs[type].push({\r\n                date: new Date().format('Y-m-d h:i:s'),\r\n                promt: temp_request_text,\r\n                result: \"\",\r\n                type: type,\r\n                news_id: temp_current_editable_index\r\n            });\r\n\r\n\r\n            this.scrollToResponse();\r\n\r\n            let messages = [\r\n                { role: 'system', content: `` },\r\n                ...previousMessages,\r\n                { role: 'user', content: temp_request_text },\r\n            ];\r\n\r\n            this.user_logs_loading[type] = true;\r\n\r\n            const total_length = messages.reduce((num, message) => (parseInt(num?.content?.length ?? 0) + parseInt(message?.content?.length ?? 0)), 0)\r\n            let model = total_length > 14_000 ? \"gpt-3.5-turbo-16k\" : \"gpt-4\";\r\n\r\n            try {\r\n                const completion = await openai.createChatCompletion({\r\n                    model,\r\n                    messages,\r\n                })\r\n    \r\n                console.log('completion', completion);\r\n                let temp_output = completion.data.choices[0].message.content\r\n    \r\n                if (!temp_output) return;\r\n    \r\n                if (type != '') {\r\n                    this.user_logs[type].at(-1).result = temp_output;\r\n                    \r\n                    this.currentLogsResult[this.user_logs[type].at(-1).promt] = (temp_current_user_logs?.at(-1)?.result?.length ?? 1) - 1\r\n    \r\n                    // scrollToBottom\r\n                    if (this.current_user_logs_type == type) {\r\n                        this.scrollToResponse();\r\n                    }\r\n                }\r\n\r\n                let completion2 = {data:{usage:{total_tokens:0}}};\r\n                \r\n                if (this.user_logs[type].length == 1) {\r\n                    this.user_logs_loading[type] = false;\r\n                    try {\r\n                        messages.push({ role: 'assistant', content: temp_output });\r\n                        messages.push({ role: 'user', content: 'Сгенерируй название этой беседы (ближе к сути), длиной не более 50 символов.' });\r\n\r\n                        completion2 = await openai.createChatCompletion({\r\n                            model: \"gpt-4\",\r\n                            messages,\r\n                        })\r\n\r\n                        const old_log = this.user_logs[type];\r\n                        delete this.user_logs[type];\r\n                        \r\n                        type = completion2.data.choices[0].message.content;\r\n                        this.current_user_logs_type = type = type.slice(0, 50);\r\n                        this.user_logs[type] = old_log;\r\n                    }\r\n                    catch (error) {\r\n                        console.log('error', error, JSON.parse(JSON.stringify(error)));\r\n                    }\r\n                }\r\n                this.user_logs_loading[type] = false;\r\n\r\n                let formData = new FormData();\r\n\r\n                formData.append('news_id', temp_current_editable_index)\r\n                formData.append('news_type', 0)\r\n                formData.append('type', type)\r\n                formData.append('promt', temp_request_text)\r\n                formData.append('result', temp_output)\r\n                formData.append('total_tokens', (completion?.data?.usage?.total_tokens ?? 0) + (completion2?.data?.usage?.total_tokens ?? 0))\r\n    \r\n                axios.post(`/gpt-service/create-log`, formData)\r\n                    .then((response) => {\r\n                        console.log('create-log = ', response);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('error', error);\r\n                    })\r\n                    .finally(async () => {\r\n                        this.user_logs = await this.getGptUserLogs();\r\n                    })\r\n            }\r\n            catch (err) {\r\n                console.log('completion ERROR =', err);\r\n                const error = JSON.parse(JSON.stringify(err));\r\n                console.log('completion error status 400 is -', error.status == 400);\r\n                if (error.status == 400) {\r\n                    this.user_logs[type] = this.user_logs[type].filter(log => log.promt != temp_request_text);\r\n                    this.chatgpt_error_modal = true;\r\n                    setTimeout(() => {\r\n                        document.querySelector('#chatgpt-prompt-textarea').innerHTML = temp_request_text;\r\n                    }, 15);\r\n                }\r\n                else console.log('completion error', error);\r\n            }\r\n\r\n        },\r\n        updateOutput() {\r\n            if (!this.chatgpt_item?.logs) {\r\n                this.condition = ''\r\n                this.input = ''\r\n                this.output = ''\r\n                return;\r\n            }\r\n            const log_keys = Object.keys(this.chatgpt_item?.logs);\r\n\r\n            if (log_keys.length == 0) return;\r\n            // if (log_keys.length == 1 && log_keys[0] == this.i18n('Обобщение')) return;\r\n\r\n\r\n\r\n            const temp_log_key = log_keys.find(prompt => (this.all_default_request_list.includes(prompt)))\r\n\r\n            if (temp_log_key) {\r\n                this.condition = temp_log_key\r\n\r\n                // if (temp_log_key == `${this.i18n(\"Обобщение\")}`) this.request_type = 'generalization';\r\n                // else if (temp_log_key == `${this.i18n(\"организации ... в позитивном ключе, объемом на английском языке.\")}`) this.request_type = 'reaction';\r\n            }\r\n\r\n            if (this.condition == '') {\r\n                const log_key = log_keys.find(prompt => (!this.all_default_request_list.includes(prompt)))\r\n                if (log_key) this.input = log_key\r\n            }\r\n\r\n            this.output = this.chatgpt_item?.logs[this.input != '' ? this.input : this.condition]?.result\r\n        },\r\n    },\r\n    watch: {\r\n        chatgpt_item(newValue) {\r\n            this.scrollToResponse();\r\n            if (newValue != null && this.chatgpt_tab == 'TextReaction') {\r\n                this.updateOutput()\r\n                // const local_prompts = this.all_default_request_list;\r\n                // this.used_prompt_list = Object.values(this.chatgpt_item?.logs).filter(log => (\r\n                //     !local_prompts.includes(log?.promt)\r\n                // )).map(log => ({ ...log, name: log?.promt }))\r\n\r\n                // console.log('used_prompt_list', this.used_prompt_list);\r\n            }\r\n            else if (newValue == null) this.output = '';\r\n        },\r\n        chatgpt_tab() {\r\n            this.scrollToResponse();\r\n        },\r\n        condition(newValue) {\r\n\r\n            if (newValue != undefined) this.input = '';\r\n\r\n            const log_keys = Object.keys(this.chatgpt_item?.logs);\r\n\r\n            if (log_keys.length == 0) return;\r\n\r\n            let temp_log = this.chatgpt_item?.logs[this.input != '' ? this.input : newValue];\r\n\r\n            let currentPromptType = {\r\n                analyze: 'analyze',\r\n                generalization: 'analyze',\r\n                reaction: 'reaction',\r\n            }[this.request_type];\r\n\r\n            this.output = currentPromptType == temp_log?.type ? temp_log?.result : ''\r\n        },\r\n        input(newValue) {\r\n            const log_keys = Object.keys(this.chatgpt_item?.logs);\r\n            if (log_keys.length == 0) return;\r\n            let temp_result = this.chatgpt_item?.logs[newValue != '' ? newValue : this.condition]?.result;\r\n            this.output = temp_result || ''\r\n\r\n            this.gpt_type = 'analyze';\r\n        },\r\n        current_user_logs_type() {\r\n            this.scrollToResponse();\r\n            this.currentLogsResult = {};\r\n            this.currentLogsPromt = {};\r\n        },\r\n    },\r\n    async mounted() {\r\n\r\n        this.user_logs = await this.getGptUserLogs();\r\n        this.current_user_logs_type = this.user_chat_names[0];\r\n    },\r\n}\r\n</script>\r\n<style scoped>\r\n/* Scrollbar */\r\n\r\n.scrollbar {\r\n    overflow-x: clip;\r\n    overflow-y: scroll;\r\n}\r\n\r\n.scrollbar::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-left: 2px;\r\n}\r\n\r\n.scrollbar::-webkit-scrollbar-track {\r\n    margin-left: 2px;\r\n    background-color: transparent;\r\n}\r\n\r\n.scrollbar::-webkit-scrollbar-thumb {\r\n    /*background-color: #eaeaea;*/\r\n    background-color: rgb(170, 227, 255);\r\n    border-radius: 5px;\r\n}\r\n\r\n/* ... */\r\n\r\n.btn-help {\r\n    margin: 0 auto;\r\n    margin-top: 30px;\r\n}\r\n\r\n.cond {\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n}\r\n\r\n.dropdown_inline {\r\n    display: inline-block;\r\n}\r\n\r\n#load-circle-analyze {\r\n    margin-left: 2px;\r\n}\r\n\r\n/* .main-block {\r\n    margin-top: 50px;\r\n} */\r\n.btn-control {\r\n    margin-top: 20px;\r\n}\r\n\r\n.btn-success {\r\n    color: #fff !important;\r\n    background-color: #3B5998 !important;\r\n    border-color: #3B5998 !important;\r\n}\r\n\r\n.btn-success:hover {\r\n    color: #fff !important;\r\n    background-color: #324c82 !important;\r\n    border-color: #324c82 !important;\r\n}\r\n\r\n.btn-info:hover,\r\n.btn-info:focus,\r\n.btn-info:active,\r\n.btn-info.active,\r\n.open .dropdown-toggle.btn-info,\r\n.btn-info:active:focus,\r\n.btn-info:active:hover,\r\n.btn-info.active:hover,\r\n.btn-info.active:focus {\r\n    background-color: #21b9bb !important;\r\n    border-color: #21b9bb !important;\r\n    color: #FFFFFF !important;\r\n}\r\n\r\n.tab-content .dropdown-menu {\r\n    padding: 5px;\r\n    font-size: 16px;\r\n}\r\n\r\n.tab-content .dropdown-menu li:hover {\r\n    color: #1e2125;\r\n    background-color: #e9ecef;\r\n    border-radius: 3px;\r\n}\r\n\r\n.tab-content .dropdown-menu li {\r\n    padding: 5px 10px;\r\n}\r\n\r\n.chatgpt-error {\r\n    color: red;\r\n    font-weight: 300;\r\n    font-size: 14px;\r\n    margin-left: 8px;\r\n}\r\n\r\n.tab-content .dropdown-toggle:after {\r\n    display: inline-block;\r\n    margin-left: 0.255em;\r\n    vertical-align: 0.255em;\r\n    content: \"\";\r\n    border-top: 0.3em solid;\r\n    border-right: 0.3em solid transparent;\r\n    border-bottom: 0;\r\n    border-left: 0.3em solid transparent;\r\n}\r\n\r\n\r\n.input-angle-down {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 8px;\r\n    bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: .15s;\r\n}\r\n\r\n.rotate-x-180 {\r\n    transform: rotateX(180deg);\r\n}\r\n\r\n.used-prompt-list {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    right: 0;\r\n    background: #fff;\r\n    margin-top: 5px;\r\n    padding: 5px;\r\n    font-size: 16px;\r\n    border-radius: 3px;\r\n    box-shadow: 0 0 3px rgba(86, 96, 117, 0.7);\r\n    max-height: 300px;\r\n    overflow-y: scroll;\r\n}\r\n\r\n.used-prompt:hover {\r\n    background: #e9ecef;\r\n}\r\n\r\n.used-prompt {\r\n    padding: 7px 10px;\r\n    cursor: pointer;\r\n    color: #1e2125;\r\n    border-radius: 3px;\r\n    height: 30px;\r\n    min-height: 30px;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\ntextarea.form-control {\r\n    word-spacing: 2px;\r\n    letter-spacing: .7px;\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n    line-height: 1.7 !important;\r\n    font-size: 13.5px !important;\r\n}\r\n\r\n.empty-list_item {\r\n    background: white !important;\r\n    color: #ccc;\r\n    cursor: default;\r\n}\r\n\r\n/*  */\r\n\r\n.select-option {\r\n    padding: 6px 7px;\r\n    cursor: pointer;\r\n    height: 27px;\r\n    white-space: nowrap;\r\n    transition: .15s;\r\n}\r\n\r\n.select-option.active,\r\n.select-option:hover {\r\n    background: rgb(59, 89, 152);\r\n    color: white;\r\n}\r\n\r\n.select-option:not(.select-option:last-child) {\r\n    border-bottom: 1px solid rgb(59, 89, 152);\r\n}\r\n\r\n.select-options {\r\n    z-index: 1;\r\n    overflow-y: clip;\r\n}\r\n\r\n.select-options-styles {\r\n    font-size: 13px;\r\n    background: white;\r\n    border-radius: 4px;\r\n    border: 1px solid rgb(59, 89, 152);\r\n    margin-top: 5px;\r\n}\r\n\r\n.select-title {\r\n    background: rgb(59, 89, 152);\r\n    height: 27px;\r\n    padding: 0px 8px 2px;\r\n    border-radius: 4px;\r\n    font-size: 13px;\r\n    width: 150px;\r\n}\r\n\r\n.right-modal-menu {\r\n    padding: 14px 10px 14px 0;\r\n    position: absolute;\r\n    left: calc(100% - 1px);\r\n    top: 48.42px;\r\n    /* width: 265px; */\r\n    width: 220px;\r\n    bottom: 0; /* -48.4px */\r\n    background: #fff;\r\n    overflow: hidden;\r\n    border-radius: 0 0 4px 0;\r\n    font-size: 14px;\r\n}\r\n\r\n.information-btn {\r\n    font-size: 13px;\r\n    color: #1c84c6;\r\n    position: absolute;\r\n    right: 0px;\r\n    top: -5px;\r\n    padding: 0.875rem 1.75rem;\r\n    border: 1px solid #1c84c6;\r\n    border-radius: 0.4em;\r\n    transition: .15s;\r\n}\r\n\r\n.information-btn:hover {\r\n    background: #1c84c6;\r\n    color: white;\r\n}\r\n\r\n.full-item-text *:has(> img) {\r\n    max-width: 100% !important;\r\n}\r\n\r\n.full-item-text *>img {\r\n    height: auto !important;\r\n}\r\n\r\n.success-btn-hover,\r\n.delete-btn-hover {\r\n    transition: .15s;\r\n    cursor: pointer;\r\n    font-size: 14.5px;\r\n}\r\n\r\n.delete-btn-hover:hover {\r\n    background: #d55454 !important;\r\n}\r\n\r\n.success-btn-hover:hover {\r\n    background: rgb(20, 131, 109) !important;\r\n}\r\n\r\n.gray-scrollbar::-webkit-scrollbar {\r\n    height: 1rem;\r\n    width: 0.5rem;\r\n}\r\n\r\n.gray-scrollbar::-webkit-scrollbar-thumb:hover {\r\n    --tw-bg-opacity: 1;\r\n    background-color: rgba(236, 236, 241, var(--tw-bg-opacity));\r\n}\r\n\r\n.gray-scrollbar::-webkit-scrollbar-thumb {\r\n    --tw-border-opacity: 1;\r\n    background-color: rgba(217, 217, 227, .8);\r\n    border-color: rgba(255, 255, 255, var(--tw-border-opacity));\r\n    border-radius: 9999px;\r\n    border-width: 1px;\r\n}\r\n\r\n.gray-scrollbar::-webkit-scrollbar-track {\r\n    background-color: transparent;\r\n    border-radius: 9999px;\r\n}\r\n\r\n\r\n.chatgpt-textbox-scrollbar[placeholder]:empty::before {\r\n    content: attr(placeholder);\r\n    color: #7d7e90;\r\n    font-weight: 400;\r\n}\r\n\r\n.chatgpt-textbox-scrollbar[placeholder]:empty {\r\n    box-shadow: 0 0 7px rgba(0, 0, 0, .1);\r\n}\r\n\r\n.chatgpt-textbox-scrollbar[placeholder]:not(.chatgpt-textbox-scrollbar[placeholder]:empty)::before {\r\n    content: \"\";\r\n}\r\n\r\n.chatgpt-request-send {\r\n    /* color: #7d7e90; */\r\n    color: #7d7e9063;\r\n}\r\n\r\n.chatgpt-textbox-scrollbar:not(.chatgpt-textbox-scrollbar.incorrect-request):not(.chatgpt-textbox-scrollbar:empty)+.chatgpt-request-send {\r\n    color: white;\r\n    background-color: rgb(25, 195, 125);\r\n    opacity: 1;\r\n    cursor: pointer;\r\n}\r\n\r\n.chatgpt-textbox-scrollbar.incorrect-request + .chatgpt-request-send,\r\n.chatgpt-textbox-scrollbar:empty + .chatgpt-request-send {\r\n    pointer-events: none;\r\n}\r\n\r\n.chatgpt-messages {\r\n    padding-bottom: calc(76px + 33px + 5px);\r\n}\r\n\r\n.chatgpt-messages::-webkit-scrollbar {\r\n    height: 1rem;\r\n    width: 0.5rem;\r\n}\r\n\r\n.chatgpt-messages::-webkit-scrollbar-thumb {\r\n    --tw-border-opacity: 1;\r\n    background-color: rgba(217, 217, 227, .8);\r\n    border-color: rgba(255, 255, 255, var(--tw-border-opacity));\r\n    border-radius: 9999px;\r\n    border-width: 1px;\r\n}\r\n\r\n.chatgpt-messages::-webkit-scrollbar-track {\r\n    background-color: transparent;\r\n    border-radius: 9999px;\r\n}\r\n\r\n.gpt-response-loading {\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    clip-path: inset(0 1.8ch 0 0);\r\n    animation: gpt-response-loading 1s steps(4) infinite;\r\n}\r\n\r\n@keyframes gpt-response-loading {\r\n    to {\r\n        clip-path: inset(0 -.6ch 0 0)\r\n    }\r\n}\r\n\r\n.modal.fade {\r\n    display: block;\r\n    opacity: 1;\r\n    background-color: rgba(0, 0, 0, 0.42);\r\n    position: fixed;\r\n}\r\n\r\n.modal-dialog {\r\n    top: 0px;\r\n}\r\n\r\n</style>","import { reactive, ref } from \"vue\"\r\n\r\nexport let chatgpt_tab = reactive(ref('TextReaction'))\r\nexport let chatgpt_item = reactive(ref(null))\r\nexport let chatgpt_log = reactive(ref(null))\r\n","import axios from 'axios'\r\n\r\nexport const getGptUserLogs = async () => {\r\n\t\r\n\ttry {\r\n\t\tlet response = await axios.get(`/gpt-service/get-user-logs`);\r\n\t\t\r\n\t\tlet user_logs = {};\r\n\t\t\r\n\t\tresponse?.data?.forEach(log => {\r\n\t\t\tif (!user_logs[log.type]) {\r\n\t\t\t\tuser_logs[log.type] = [];\r\n\t\t\t}\r\n\t\t\t// let lastLog = user_logs[log.type]?.at(-1);\r\n\t\t\t// if (lastLog?.promt === log?.promt) {\r\n\t\t\t// \tif (!Array.isArray(lastLog?.result)) {\r\n\t\t\t// \t\tlastLog.result = [lastLog.result];\r\n\t\t\t// \t\tlastLog.currentResult = 0;\r\n\t\t\t// \t}\r\n\t\t\t// \tlastLog.result = [...lastLog?.result, log?.result]\r\n\t\t\t// }\r\n\t\t\t// else {\r\n\t\t\tuser_logs[log.type] = [...user_logs[log.type], log];\r\n\t\t\t// }\r\n\t\t});\r\n\r\n\t\t\r\n\t\treturn user_logs\r\n\t}\r\n\tcatch (error) {\r\n\t\tconsole.error('getGptUserLogs', error);\r\n\t}\r\n}\r\n","export function getLang() {\r\n    var params = {};\r\n\r\n    let tmp_params = window.location.href\r\n        .replace(/\\?.*/, \"\")\r\n        .split(\"//\")\r\n        .join(\"\")\r\n        .split(\"/\");\r\n    for (var p = 0; p < tmp_params.length; p++) {\r\n        var _tmp = tmp_params[p].split(\"=\");\r\n\r\n        params[_tmp[0]] = _tmp[1];\r\n    }\r\n    let lang = Object.keys(params)[1];\r\n    return lang;\r\n}\r\nexport function langIs(lang) {\r\n    return getLang() === lang;\r\n}","import { render } from \"./TextReaction.vue?vue&type=template&id=b0413fac&scoped=true\"\nimport script from \"./TextReaction.vue?vue&type=script&lang=js\"\nexport * from \"./TextReaction.vue?vue&type=script&lang=js\"\n\nimport \"./TextReaction.vue?vue&type=style&index=0&id=b0413fac&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b0413fac\"]])\n\nexport default __exports__","import { render } from \"./ChatGPTModal.vue?vue&type=template&id=122f2c0a\"\nimport script from \"./ChatGPTModal.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPTModal.vue?vue&type=script&lang=js\"\n\nimport \"./ChatGPTModal.vue?vue&type=style&index=0&id=122f2c0a&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=603085e3\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=603085e3&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","Array.prototype.join_title = function () {\r\n    return [...this].map(item => ('• '+item)).join('\\n');\r\n}\r\nNumber.prototype.minmax = function (min, max) {\r\n    return this < min ? min : this > max ? max : this;\r\n}\r\nNumber.prototype.push_space = function () {\r\n    return [...[...this.toString()].reverse().join('').match(/.{1,3}/g).join(' ')].reverse().join('')\r\n}\r\nString.prototype.push_space = function () {\r\n    const temp_integer = parseInt(this);\r\n    return isNaN(temp_integer) ? this : temp_integer.push_space()\r\n}\r\nconst divider_obj = {\r\n    1_000_000_000: ' млрд.',\r\n    1_000_000: ' млн.',\r\n    1: '',\r\n}\r\nNumber.prototype.getFixedOne = function() {\r\n    return parseInt((this) * 10) / 10\r\n}\r\nNumber.prototype.short = function () {\r\n    const one_billion = 1_000_000_000\r\n    const one_million = 1_000_000\r\n    let some_divider = this >= one_billion ? one_billion : this >= one_million ? one_million : 1;\r\n    if (divider_obj[some_divider] == '') {\r\n        return this.push_space()\r\n    }\r\n    else {\r\n        return (this / some_divider).getFixedOne() + divider_obj[some_divider]\r\n    }\r\n}\r\nString.prototype.short = function () {\r\n    return parseInt(this).short()\r\n}\r\nString.prototype.maxLength = function (length) {\r\n    if (this.trim().length <= length) return this.trim();\r\n    else return this.trim().slice(0, length) + '...'\r\n    // Crewmate WillThrowTheseHands\r\n}\r\n\r\nimport { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport './assets/tailwind.css'\r\n\r\ncreateApp(App).mount('#app')\r\n","\r\nconst dateTypes = {\r\n    hour: \"etHours\",\r\n    date: \"etDate\",\r\n    \"week-day\": \"etDay\",\r\n    month: \"etMonth\",\r\n    year: \"etFullYear\",\r\n};\r\nconst dateFormats = {\r\n    Y: \"getFullYear\",\r\n    m: \"getMonth\",\r\n    d: \"getDate\",\r\n    h: \"getHours\",\r\n    i: \"getMinutes\",\r\n    s: \"getSeconds\",\r\n    w: \"getDay\",\r\n};\r\nconst months = [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Сентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\",\r\n];\r\nconst weeks = [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\",\r\n];\r\n\r\nDate.prototype.plus = function (type, count) {\r\n    this[\"s\" + dateTypes[type]](this[\"g\" + dateTypes[type]]() + count);\r\n    return this\r\n};\r\nDate.prototype.minus = function (type, count) {\r\n    this[\"s\" + dateTypes[type]](this[\"g\" + dateTypes[type]]() - count);\r\n    return this\r\n};\r\nfunction getFormatDate(date) {\r\n    if (date < 10) {\r\n        return \"0\" + date;\r\n    }\r\n    return date;\r\n}\r\nString.prototype.format = function (format, bool) {\r\n    return new Date(this).format(format, bool)\r\n}\r\nString.prototype.lowerIncludes = function (string) {\r\n    return this.trim().toLowerCase().includes(string.trim().toLowerCase())\r\n}\r\nDate.prototype.format = function (format, bool) {\r\n    return Object.keys(dateFormats).reduce((oldFormat, dateFormat) => {\r\n        if (oldFormat.includes(dateFormat)) {\r\n            let plus = 0;\r\n\r\n            if (dateFormat == \"m\") {\r\n                plus = 1;\r\n            }\r\n\r\n            let formatDate;\r\n\r\n            if (dateFormat == \"w\") {\r\n                formatDate = this[dateFormats[dateFormat]]();\r\n                if (formatDate == 0) {\r\n                    formatDate = 7\r\n                }\r\n                formatDate = bool ? weeks[this[dateFormats[dateFormat]]()] : formatDate;\r\n            }\r\n            else {\r\n                let format_view = bool && dateFormat == 'm' ? months[this[dateFormats[dateFormat]]()] : plus + this[dateFormats[dateFormat]]();\r\n                formatDate = format_view;\r\n            }\r\n\r\n            return oldFormat.replace(\r\n                dateFormat,\r\n                getFormatDate(formatDate)\r\n            );\r\n        } else {\r\n            return oldFormat;\r\n        }\r\n    }, format);\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchat_gpt\"] = self[\"webpackChunkchat_gpt\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1351); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createVNode","_component_ChatGPTModal","_createElementVNode","onClick","_cache","$event","$setup","chatgpt_item","class","style","_hoisted_4","_createElementBlock","_withModifiers","_normalizeClass","chatgpt_tab","_hoisted_1","_normalizeStyle","_hoisted_2","_hoisted_3","_hoisted_6","_hoisted_7","_hoisted_8","_component_TextReaction","stroke","fill","viewBox","height","width","xmlns","x1","y1","x2","y2","d","_hoisted_12","_hoisted_13","points","_hoisted_15","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_23","_hoisted_24","_hoisted_37","_hoisted_41","_hoisted_48","_hoisted_51","_hoisted_58","role","x","y","_hoisted_68","_hoisted_72","rx","ry","_hoisted_82","_hoisted_83","_hoisted_86","_hoisted_89","_hoisted_96","id","$data","select_options_modal","used_prompt_list_modal","current_user_logs_type","_hoisted_5","_Fragment","_renderList","$options","user_chat_names","chat_name","key","isCorrectRequest","request_text","edit_some_chat","previous_name","type","maxlength","name","validation_chat_name","onKeydown","_withKeys","args","update_user_logs_type_name","_hoisted_9","_hoisted_10","_hoisted_17","confirm_delete_chat_modal","current_user_logs","length","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","log","index","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","minusCurrentPromt","currentLogsPromt","_hoisted_39","_toDisplayString","promt","plusCurrentPromt","Array","isArray","_hoisted_43","_hoisted_44","editable_logs","getLogPromt","tabindex","rows","placeholder","user_logs_loading","contenteditable","onInput","_ctx","editable_log_text","target","innerText","edit_log","_hoisted_45","_hoisted_46","as","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","minusCurrentResult","currentLogsResult","_hoisted_70","getLogResultArray","plusCurrentResult","result","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","getLogResult","_hoisted_78","_hoisted_79","copyResponse","_hoisted_81","_hoisted_84","copied_log","_hoisted_85","_hoisted_87","user_logs","_hoisted_88","regenerate_gpt_request","_hoisted_91","_hoisted_92","_hoisted_93","current_editable_log_index","send_gpt_request","_hoisted_94","_hoisted_95","_hoisted_97","_hoisted_98","_hoisted_99","_hoisted_100","_hoisted_101","_hoisted_102","delete_user_logs_by_type","chatgpt_error_modal","_hoisted_103","_hoisted_104","_hoisted_105","_hoisted_106","reactive","ref","getGptUserLogs","async","response","axios","get","data","forEach","error","console","getLang","params","tmp_params","window","location","href","replace","split","join","p","_tmp","lang","Object","keys","configuration","Configuration","apiKey","process","openai","OpenAIApi","default_requests","tab_info","default_type_requests","analyze","reaction","generalization","request_type","condition","input","output","dropdown_menu","used_prompt_list","answer_lang","ru","en","kz","additional_info","analyze_prompts_modal","reaction_prompts_modal","setup","computed","this","JSON","parse","stringify","undefined","at","news_id","push","lastLog","includes","filter","val","load_circle_analyze","logs","user_log_types","entries","map","timestamp","Math","max","Date","date","valueOf","sort","a","b","user_log","methods","event","document","querySelector","temp_promt","temp_results","minmax","temp_log","new_chat_name","previous_name_chat_name","setTimeout","formData","FormData","append","post","then","catch","temp_user_logs","tmp","createElement","value","body","appendChild","select","execCommand","removeChild","temp_result","scrollToResponse","element","scrollIntoView","behavior","block","shiftKey","innerHTML","temp_request_text","temp_current_editable_index","temp_current_user_logs","chatgpt_error","slice","maxLength","textLength","parseInt","previousMessages","i","content","format","messages","total_length","reduce","num","message","model","completion","createChatCompletion","temp_output","choices","completion2","usage","total_tokens","old_log","finally","err","status","updateOutput","log_keys","temp_log_key","find","prompt","all_default_request_list","log_key","watch","newValue","currentPromptType","gpt_type","mounted","__exports__","components","TextReaction","ChatGPTModal","render","prototype","join_title","item","Number","min","push_space","toString","reverse","match","String","temp_integer","isNaN","divider_obj","getFixedOne","short","one_billion","one_million","some_divider","trim","createApp","App","mount","dateTypes","hour","month","year","dateFormats","Y","m","h","s","w","months","weeks","getFormatDate","plus","count","minus","bool","lowerIncludes","string","toLowerCase","oldFormat","dateFormat","formatDate","format_view","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}